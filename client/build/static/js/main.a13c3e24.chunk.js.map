{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Content","QRCode","require","App","useState","loading","setLoading","phone","setPhone","msg","setMessage","qrcode","setQRCode","collapsed","setcollapsed","setIsModalVisible","getQRCode","a","axios","post","res","data","message","error","className","style","padding","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","margin","minHeight","value","tip","size","spinning","htmlFor","type","id","placeholder","onChange","e","target","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","direction","document","getElementById"],"mappings":"ySAYQA,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAEZC,EAASC,EAAQ,KAsFNC,EArFH,WACV,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAA4CV,oBAAS,GAArD,mBAAuBW,GAAvB,WAgBMC,EAAS,uCAAG,4BAAAC,EAAA,6DAChBX,GAAW,GADK,kBAGIY,IAAMC,KAAK,OAAQ,CAAEZ,QAAOE,QAHhC,QAGRW,EAHQ,QAINC,OAjBVN,GAAkB,GAmBdH,EAAUQ,EAAIC,OAEhBf,GAAW,GARG,gDAUdA,GAAW,GACXgB,IAAQC,MAAM,2FAXA,yDAAH,qDAgBf,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAQC,UAAU,cAAlB,UACE,cAAC1B,EAAD,CAAQ0B,UAAU,yBAAyBC,MAAO,CAAEC,QAAS,GAA7D,SACGC,IAAMC,cAAcf,EAAYgB,IAAqBC,IAAkB,CACtEN,UAAW,UACXO,QAzBK,WACbjB,GAAcD,QA2BV,eAACb,EAAD,CACEwB,UAAU,yBACVC,MAAO,CACLO,OAAQ,YACRN,QAAS,GACTO,UAAW,KALf,UASA,cAAChC,EAAD,CAAQiC,MAAOvB,IAEb,cAAC,IAAD,CAAMwB,IAAI,gOAAiDC,KAAK,SAASC,SAAUhC,EAAnF,SACE,sBAAKmB,UAAU,gCAAf,UACA,qBAAKA,UAAU,kBAAf,SACE,oBAAIA,UAAU,QAAd,oIAIA,sBAAKA,UAAU,OAAf,UACE,uBAAOc,QAAQ,2BAA2Bd,UAAU,aAApD,qEACA,uBAAOe,KAAK,OAAOf,UAAU,eAAegB,GAAG,2BAA2BC,YAAY,0DAAaP,MAAO3B,EAAOmC,SAAU,SAACC,GAAD,OAAOnC,EAASmC,EAAEC,OAAOV,aAEtJ,sBAAKV,UAAU,OAAf,UACE,uBAAOc,QAAQ,8BAA8Bd,UAAU,aAAvD,uEACA,0BAAUA,UAAU,eAAegB,GAAG,8BAA8BN,MAAOzB,EAAKiC,SAAU,SAACC,GAAD,OAAOjC,EAAWiC,EAAEC,OAAOV,QAAQW,KAAK,SAEpI,qBAAKrB,UAAU,OAAf,SACE,wBAAQA,UAAU,kBAAkBO,QAASf,EAA7C,wCC7ED8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAgBC,UAAU,MAA1B,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.a13c3e24.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.min.css';\nimport './App.css';\nimport { Layout, message, Modal, Spin } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n} from '@ant-design/icons';\n\nconst { Header, Content } = Layout;\n\nvar QRCode = require(\"qrcode.react\");\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [phone, setPhone] = useState(\"\");\n  const [msg, setMessage] = useState(\"\");\n  const [qrcode, setQRCode] = useState(false);\n  const [collapsed, setcollapsed] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const toggle = () => {\n    setcollapsed(!collapsed)\n  }\n  const getQRCode = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post(\"/api\", { phone, msg });\n      if (res.data) {\n        showModal();\n        setQRCode(res.data);\n      }      \n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      message.error('حدث خطأ غير متوقع')\n    }\n  };    \n\n\n  return (\n    <Layout>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n            className: 'trigger',\n            onClick: toggle,\n          })}\n        </Header>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: '24px 16px',\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n            \n        <QRCode value={qrcode} />\n            \n          <Spin tip=\"ادخل الرمز من داخل الواتساب في اعلى الشاشه ...\" size=\"middle\" spinning={loading}>\n            <div className=\"whats-app-conent bg-white p-5\">\n            <div className=\"whts-app-header\">\n              <h3 className=\"title\">\n                برنامج ارسال للواتسآب\n              </h3>\n            </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">رقم الهاتف</label>\n                <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"رقم الهاتف\" value={phone} onChange={(e) => setPhone(e.target.value)} />\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">نص الرسالة: </label>\n                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" value={msg} onChange={(e) => setMessage(e.target.value)} rows=\"3\"></textarea>\n              </div>\n              <div className=\"my-1\">\n                <button className=\"btn btn-primary\" onClick={getQRCode} >Get QRCode</button>\n              </div>\n            </div>\n          </Spin>\n        </Content>\n      </Layout>\n    </Layout>\n\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ConfigProvider } from 'antd';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider direction=\"rtl\">\n      <App />\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}